SET SERVEROUTPUT ON;

--ESTRUTURA

DECLARE
-- O RESULTADO DO SELECT VAI PARA MEMORIA ATRAVES DA VARIAVEL cur_CLIENTE
    CURSOR cur_CLIENTE IS SELECT ID, RAZAO_SOCIAL FROM CLIENTE;
-- DECLARO AS VARIAVEIS DE TRABALHO QUE SERAO UTILIZACAS NA INTERACAO DO CURSOR
    v_ID CLIENTE.ID%TYPE;
    v_RAZAO_SOCIAL CLIENTE.RAZAO_SOCIAL%TYPE;
BEGIN
    -- ABERTURA DO CURSOR - JOGA O SELECT EM MEMORIA
    OPEN cur_CLIENTE;
    LOOP
        -- JOGA O CONTEUDO DO CURSOR NA VARIAVEL
        FETCH cur_CLIENTE INTO v_ID, v_RAZAO_SOCIAL;
     --EXECUTA CURSOR ATE A ULTIMA LINHA
    EXIT WHEN cur_CLIENTE%NOTFOUND;
        dbms_output.put_line(v_ID);
        dbms_output.put_line(v_RAZAO_SOCIAL);
    END LOOP;
        -- FECHANDO CURSOR
        CLOSE cur_CLIENTE;
END;

--- OUTRA OPCAO

DECLARE
    CURSOR cur_CLIENTE IS SELECT ID FROM CLIENTE;
    v_SEGMERCADO_ID CLIENTE.SEGMERCADO_ID%TYPE := 2;
BEGIN
    FOR cli_rec IN cur_CLIENTE LOOP
        atualizar_cli_seg_mercado(p_SEGMERCADO_ID => v_SEGMERCADO_ID, p_ID => cli_rec.ID);
    END LOOP;

    CLOSE cur_CLIENTE; 
END;